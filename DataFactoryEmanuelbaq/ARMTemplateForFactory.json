{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DataFactoryEmanuelbaq"
		},
		"AzureBlobStorageEmanuelbaq_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorageEmanuelbaq'"
		},
		"AzureDatabricks1_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks1'"
		},
		"AzureSqlDatabaseEmanuelbaq_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabaseEmanuelbaq'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Sp1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Delete_Public_Parking_Lots]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabaseEmanuelbaq",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp2",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Sp1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Sp_Delete_Public_Parking_Lots_Cluster]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabaseEmanuelbaq",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Lot",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Lot",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Second Entrance/Cross Street",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Second_Entrance_Cross_Street",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Island",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Island",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Stalls",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Stalls",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Payment",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Payment",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Rates",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Rates",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Rate Limit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Rate_Limit",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Address",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Address",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Latititude",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Latititude",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Longitidue",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Longitidue",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "GeoJSON",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GeoJSON",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Input",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Public_Parking_Lots",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Lot",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Lot",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Island",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Island",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Stalls",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Stalls",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Latititude",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Latititude",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Longitidue",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Longitidue",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Input",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Output_1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data3",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Second Entrance/Cross Street",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Second Entrance/Cross Street",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Payment",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Payment",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Rates",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Rates",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "GeoJSON",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GeoJSON",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Input",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Output_2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data4",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Rate Limit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Rate Limit",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Address",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Address",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Input",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Output_3",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data5",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Notebook1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Lot",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Lot",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Island",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Island",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Stalls",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Stalls",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Latititude",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Latititude",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Longitidue",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Longitidue",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Second Entrance/Cross Street",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Second_Entrance_Cross_Street",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Payment",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Payment",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Rates",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Rates",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "GeoJSON",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "GeoJSON",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "prediction",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "prediction",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "InputPrediction",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Public_Parking_Lots_Cluster",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Notebook1",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Copy data4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/emanuel.n.baquero@accenture.com/Process"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Sp2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 20
						}
					},
					{
						"name": "NotebookDeleteFiles",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Copy data5",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/emanuel.n.baquero@accenture.com/deleteBlob"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy data6",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "NotebookDeleteFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[Sp_Public_Parking_Lots]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Lot",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Lot",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Second_Entrance_Cross_Street",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Second_Entrance_Cross_Street",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Island",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Island",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Stalls",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Stalls",
											"type": "Int32",
											"physicalType": "Int32"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Payment",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Payment",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Rates",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Rates",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Rate_Limit",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Rate_Limit",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Address",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Address",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Latititude",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Latititude",
											"type": "Double",
											"physicalType": "Double"
										}
									},
									{
										"source": {
											"name": "Longitidue",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "Longitidue",
											"type": "Double",
											"physicalType": "Double"
										}
									},
									{
										"source": {
											"name": "GeoJSON",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "GeoJSON",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Prediction",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Prediction",
											"type": "Int32",
											"physicalType": "Int32"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Public_Parking_Lots",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "PredictionData",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseEmanuelbaq')]",
				"[concat(variables('factoryId'), '/datasets/Input')]",
				"[concat(variables('factoryId'), '/datasets/Public_Parking_Lots')]",
				"[concat(variables('factoryId'), '/datasets/Output_1')]",
				"[concat(variables('factoryId'), '/datasets/Output_2')]",
				"[concat(variables('factoryId'), '/datasets/Output_3')]",
				"[concat(variables('factoryId'), '/datasets/InputPrediction')]",
				"[concat(variables('factoryId'), '/datasets/Public_Parking_Lots_Cluster')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks1')]",
				"[concat(variables('factoryId'), '/datasets/PredictionData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageEmanuelbaq",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "oahu-state-public-parking-lots-csv.csv",
						"container": "storageemanuelbaq"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Lot",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Second Entrance/Cross Street",
						"type": "String"
					},
					{
						"name": "Island",
						"type": "String"
					},
					{
						"name": "Stalls",
						"type": "String"
					},
					{
						"name": "Type",
						"type": "String"
					},
					{
						"name": "Payment",
						"type": "String"
					},
					{
						"name": "Rates",
						"type": "String"
					},
					{
						"name": "Rate Limit",
						"type": "String"
					},
					{
						"name": "Address",
						"type": "String"
					},
					{
						"name": "Latititude",
						"type": "String"
					},
					{
						"name": "Longitidue",
						"type": "String"
					},
					{
						"name": "GeoJSON",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageEmanuelbaq')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InputPrediction')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageEmanuelbaq",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "prediction.csv",
						"container": "curated"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Lot|Island|Stalls|Latititude|Longitidue",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageEmanuelbaq')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Output_1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageEmanuelbaq",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "output_1.csv",
						"container": "curated"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Lot|Island|Stalls|Latititude|Longitidue",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageEmanuelbaq')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Output_2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageEmanuelbaq",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "output_2.csv",
						"container": "curated"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Lot|Island|Stalls|Latititude|Longitidue",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageEmanuelbaq')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Output_3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageEmanuelbaq",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "output_3.csv",
						"container": "curated"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Lot|Island|Stalls|Latititude|Longitidue",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageEmanuelbaq')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PredictionData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageEmanuelbaq",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "curatedCluster.csv",
						"container": "curated"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageEmanuelbaq')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Public_Parking_Lots')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseEmanuelbaq",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Lot",
						"type": "varchar"
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "Second_Entrance_Cross_Street",
						"type": "varchar"
					},
					{
						"name": "Island",
						"type": "varchar"
					},
					{
						"name": "Stalls",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Type",
						"type": "varchar"
					},
					{
						"name": "Payment",
						"type": "varchar"
					},
					{
						"name": "Rates",
						"type": "varchar"
					},
					{
						"name": "Rate_Limit",
						"type": "varchar"
					},
					{
						"name": "Address",
						"type": "varchar"
					},
					{
						"name": "Latititude",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Longitidue",
						"type": "float",
						"precision": 15
					},
					{
						"name": "GeoJSON",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Public_Parking_Lots"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseEmanuelbaq')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Public_Parking_Lots_Cluster')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseEmanuelbaq",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Lot",
						"type": "varchar"
					},
					{
						"name": "Island",
						"type": "varchar"
					},
					{
						"name": "Stalls",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Latititude",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Longitidue",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "Second_Entrance_Cross_Street",
						"type": "varchar"
					},
					{
						"name": "Payment",
						"type": "varchar"
					},
					{
						"name": "Rates",
						"type": "varchar"
					},
					{
						"name": "GeoJSON",
						"type": "varchar"
					},
					{
						"name": "prediction",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Public_Parking_Lots_Cluster"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseEmanuelbaq')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorageEmanuelbaq')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorageEmanuelbaq_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-7517189338754260.0.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks1_accessToken')]"
					},
					"existingClusterId": "0401-185205-spout840"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabaseEmanuelbaq')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabaseEmanuelbaq_connectionString')]"
				}
			},
			"dependsOn": []
		}
	]
}